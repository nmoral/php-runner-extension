version: '3.8'

services:
  # Service PHP principal pour l'application
  app:
    image: php:8.2-fpm
    container_name: my-php-app
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/php.ini:/usr/local/etc/php/conf.d/custom.ini
    environment:
      - PHP_IDE_CONFIG=serverName=localhost
    networks:
      - app-network
    depends_on:
      - database
      - redis

  # Service web (Nginx)
  web:
    image: nginx:alpine
    container_name: my-nginx
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
    depends_on:
      - app

  # Base de données
  database:
    image: mysql:8.0
    container_name: my-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: myapp
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql.cnf:/etc/mysql/conf.d/custom.cnf
    networks:
      - app-network

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: my-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # Service de tests
  test:
    image: php:8.2-cli
    container_name: my-php-test
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/php.ini:/usr/local/etc/php/conf.d/custom.ini
    environment:
      - APP_ENV=test
    networks:
      - app-network
    depends_on:
      - database
      - redis

  # Service de développement
  dev:
    image: php:8.2-fpm
    container_name: my-php-dev
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/php.ini:/usr/local/etc/php/conf.d/custom.ini
      - ./docker/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    environment:
      - XDEBUG_MODE=debug
      - XDEBUG_CONFIG=client_host=host.docker.internal
    networks:
      - app-network
    depends_on:
      - database
      - redis

volumes:
  mysql_data:
  redis_data:

networks:
  app-network:
    driver: bridge
